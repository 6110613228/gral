allprojects {
	apply plugin: 'maven'

	group = 'de.erichseifert.gral'
	version = '0.10-SNAPSHOT'
	
	ext.inceptionYear = 2009
}

subprojects {
	apply plugin: 'java'
	sourceCompatibility = 1.6
	targetCompatibility = 1.6
	// TODO: Add support for MacOS
	// jar is located at: ${java.home}/bundle/Classes/classes.jar
	ext.runtimeJar = "${System.getProperty('java.home')}/lib/rt.jar"

	repositories {
		mavenLocal()
		maven { url "http://mvn.erichseifert.de/maven2" }
		mavenCentral()
	}
	dependencies {
		compile group: 'de.erichseifert.vectorgraphics2d', name: 'VectorGraphics2D', version:'0.9.1'
	}
	
	task shrink(type: proguard.gradle.ProGuardTask, dependsOn: jar) {
		description = "Uses ProGuard to reduce the code size of this project."
		// Configure ProGuard
		configuration("src/etc/proguard.conf")
		target(targetCompatibility.toString())
		injars(jar.archivePath)
		outjars("${libsDir}/shrunk/${jar.archiveName}")
		libraryjars(runtimeJar)
		libraryjars(configurations.runtime)

		doLast {
			// Use the shrunk jar for all further processing
			jar.destinationDir = new File("${libsDir}/shrunk/")
		}
	}
	
	apply plugin: 'license'
	license {
		header(rootProject.file("config/license-header.txt"))
		strictCheck(true)
		mapping {
			java = "SLASHSTAR_STYLE"
		}
		dryRun = true;
		
		def currentYear = new GregorianCalendar().get(Calendar.YEAR);
		ext.year = "${inceptionYear}-${currentYear}"
		ext.owner1 = "Erich Seifert"
		ext.email1 = "dev[at]erichseifert.de"
		ext.owner2 = "Michael Seifert"
		ext.email2 = "michael[at]erichseifert.de"

		// Exlude certain file types from license checking
		// https://github.com/hierynomus/license-gradle-plugin/issues/9
	 	tasks.withType(nl.javadude.gradle.plugins.license.License).each { licenseTask ->
			licenseTask.exclude '**.properties'
		}
	}
	
	apply plugin: "pmd"
	pmd {
		// TODO: Dynamic dependency resolution possible?
		toolVersion = "5.0.5"
		ruleSets = ["java-basic"]
		ignoreFailures = true
	}
	
	apply plugin: "distribution"
	distributions {
		main {
			contents {
				from(rootDir) {
					include("LICENSE**")
					include("gradlew")
					include("gradlew.bat")
				}
				from("${projectDir}") {
					include("build.gradle")
				}
			}
		}
	}
	distTar.dependsOn(shrink)
	distTar.compression = Compression.BZIP2
	distTar.extension = "tar.bz2"
}

// Include the proguard-gradle plugin
buildscript {
	repositories {
		mavenLocal()
		maven { url "http://mvn.erichseifert.de/maven2" }
		mavenCentral()
	}
	dependencies {
		classpath(group: "net.sf.proguard", name: "proguard-gradle", version: "4.+")
	}
}

// Include the License Gradle plugin
buildscript {
    repositories {
		mavenLocal()
		maven { url "http://mvn.erichseifert.de/maven2" }
		mavenCentral()
    }

    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.6.+'
    }
}
